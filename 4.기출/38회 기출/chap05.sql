-- EXAM10_11
SELECT * FROM EXAM10_11;

SELECT COUNT(*) FROM EXAM10_11
WHERE COL3 <> 3
START WITH COL3 = 4
CONNECT BY COL1 = PRIOR COL2;

-- EXAM10_15
SELECT * FROM EXAM10_15;

-- 1
SELECT BAN, COUNT(*) AS RESULT
FROM EXAM10_15
GROUP BY BAN;

-- 2
SELECT BAN, COUNT(1) AS RESULT
FROM EXAM10_15
GROUP BY BAN;

-- 3
SELECT BAN, COUNT(DISTINCT NAME) AS RESULT
FROM EXAM10_15
GROUP BY BAN;

-- 4
SELECT
COUNT(CASE WHEN BAN=1 THEN 1 END)
AS RESULT,
COUNT(CASE WHEN BAN=2 THEN 1 END)
AS B,
COUNT(CASE WHEN BAN=3 THEN 1 END)
AS C
FROM EXAM10_15;

-- EXAM10_16
SELECT * FROM EXAM10_16;

-- 1
SELECT COUNT(3) FROM EXAM10_16; --6

-- 2
SELECT COUNT(MEMBERID) FROM EXAM10_16; -- 4

-- 3
SELECT COUNT(NULLIF(MEMBERID, NULL)) FROM EXAM10_16; -- 4

-- 4 
SELECT COUNT(*) FROM EXAM10_16
WHERE MEMBERID IS NOT NULL; -- 4

-- EXAM10_18
SELECT * FROM EXAM10_18;

-- 1
SELECT DNAME, JOB, SUM(SAL)
FROM EXAM10_18
GROUP BY CUBE(DNAME, JOB);

-- 2
SELECT DNAME, JOB, SUM(SAL)
FROM EXAM10_18
GROUP BY ROLLUP(DNAME, JOB);

-- 3
SELECT DNAME, JOB, SUM(SAL)
FROM EXAM10_18
GROUP BY GROUPING SETS(DNAME, JOB);

-- 4
SELECT DNAME, JOB, SUM(SAL)
FROM EXAM10_18
GROUP BY CUBE(DNAME); -- ERROR

-- EXAM10_19
SELECT * FROM EXAM10_19;

SELECT C1, C2,
CASE
WHEN C2<=100 THEN 'B'
WHEN C2<=300 THEN 'A'
ELSE 'S'
END GRADE
FROM EXAM10_19
ORDER BY C2;

-- EXAM10_32
SELECT * FROM EXAM10_32;
INSERT INTO EXAM10_32 VALUES(NULL, NULL);
INSERT INTO EXAM10_32 VALUES(10, 12);

SELECT CASE WHEN SUM(COL1+COL2)
IN NULL THEN 0
ELSE SUM(COL1+COL2)
END AS гу╟Х
FROM EXAM10_32;

-- EXAM10_33
SELECT * FROM EXAM10_33;

-- 1
SELECT ENAME, SAL
FROM (SELECT ENAME, SAL FROM
EXAM10_33 ORDER BY SAL DESC)
WHERE ROWNUM = 1;

-- 2
SELECT ENAME, SAL
FROM (SELECT ENAME, SAL FROM
EXAM10_33 ORDER BY SAL DESC)
WHERE ROWNUM = 2;

-- 3
SELECT ENAME, SAL
FROM (SELECT * FROM
EXAM10_33 ORDER BY SAL DESC)
WHERE ROWNUM > 0;

-- 4
SELECT ENAME, SAL
FROM (SELECT * FROM
EXAM10_33 ORDER BY SAL DESC)
WHERE ROWNUM <= 3;

-- EXAM10_36
SELECT * FROM EXAM10_36_1;
SELECT * FROM EXAM10_36_2;

SELECT COUNT(*) ROWCNT
FROM EXAM10_36_1 a, EXAM10_36_2 b
WHERE a.ename LIKE b.condition;

-- 38
CREATE TABLE EXAM11_38_1
(
A NUMBER(10) PRIMARY KEY,
B NUMBER(10)
);

CREATE TABLE EXAM11_38_2
(
A NUMBER(10),
B NUMBER(10) REFERENCES EXAM11_38_1(A)
ON DELETE CASCADE);

SELECT * FROM EXAM11_38_1;
SELECT * FROM EXAM11_38_2;

INSERT INTO EXAM11_38_1 VALUES(1,1);
INSERT INTO EXAM11_38_1 VALUES(2,2);

INSERT INTO EXAM11_38_2 VALUES(1,1);
INSERT INTO EXAM11_38_2 VALUES(2,2);

DELETE FROM EXAM11_38_1 WHERE A=1;
SELECT * FROM EXAM11_38_2;

DROP TABLE EXAM11_38_1;
DROP TABLE EXAM11_38_2;


-- EXAM10_39
SELECT * FROM EXAM10_39;

SELECT COUNT(*) FROM EXAM10_39
GROUP BY COL1
HAVING COUNT(*)>2;

-- EXAM10_40
SELECT * FROM EXAM10_40;

SELECT COUNT(COL1),COUNT(COL2)
FROM(
SELECT DISTINCT COL1, COL2
FROM EXAM10_40
);


-- EXAM10_44
SELECT * FROM EXAM10_44;

SELECT
ROW_NUMBER() OVER(ORDER BY SAL DESC)
AS RANK, NAME, DEPTNAME, POSITION, SAL
FROM EXAM10_44;

-- EXAM10_48
SELECT * FROM EXAM10_48;

SELECT AVG(NVL(COL2,0)) FROM EXAM10_48;